# Environment variables for Pocket Booth

# ======================================================================
# Frontend Configuration (React App)
# ======================================================================

# Vercel API URL for Google Drive uploads (required for upload feature)
# This is the URL of your deployed Vercel backend
# Format: https://your-vercel-app.vercel.app (no trailing slash)
#
# To use this:
# 1. Deploy backend to Vercel first
# 2. Get your Vercel URL from the deployment
# 3. Create .env.production locally with this variable
# 4. Run: yarn deploy
#
# Example: VITE_VERCEL_API_URL=https://pocket-booth-abc123.vercel.app
VITE_VERCEL_API_URL=

# ======================================================================
# Key-Based Photo Limit Configuration
# ======================================================================
# This allows you to pre-configure photo limits that are loaded via URL
# Usage: Add ?key=YOUR_KEY to the URL
# Example: https://yourapp.com/?key=myevent
#
# Format: VITE_CONFIG_[KEY_NAME]=[photoLimit]
# The key is stored in sessionStorage and persists for the session
# - photoLimit: Maximum number of photo strips allowed (leave empty for unlimited)

# Example configurations:
# VITE_CONFIG_MYEVENT=10
# VITE_CONFIG_WEDDING=5
# VITE_CONFIG_BIRTHDAY=20
# VITE_CONFIG_DEMO=3
# VITE_CONFIG_UNLIMITED=

# Note: Photos are only stored locally in the browser's localStorage
# No server-side storage or uploads are performed

# ======================================================================
# Google Drive Upload Configuration (for Vercel deployment)
# ======================================================================

# *** MULTI-ACCOUNT SUPPORT ***
# You MUST configure different Google accounts and folders for different keys.
# Each event (key) uploads to a different Google Drive account.

# Key-specific folder IDs (REQUIRED for each key)
# Format: GDRIVE_FOLDER_ID_{KEY_NAME}={folder_id}
# Find folder ID in the URL when you open the folder in Google Drive
# Example: https://drive.google.com/drive/folders/YOUR_FOLDER_ID_HERE
# Leave empty to upload to root directory
GDRIVE_FOLDER_ID_WEDDING=your_folder_id_here
GDRIVE_FOLDER_ID_BIRTHDAY=your_folder_id_here

# ======================================================================
# OAuth 2.0 Configuration (Required for admin authorization)
# ======================================================================

# *** MULTI-ACCOUNT SUPPORT - KEYS REQUIRED ***
# You MUST configure OAuth credentials for EACH key.
# Each event (key) uses a different Google account.

# Key-specific OAuth credentials (REQUIRED for each key)
# Format: GOOGLE_OAUTH_CREDENTIALS_{KEY_NAME}={oauth_json}
#
# Steps to get OAuth JSON:
# 1. Go to Google Cloud Console > APIs & Services > Credentials
# 2. Create OAuth 2.0 Client ID (or use existing one)
# 3. Click the download button (⬇️) next to your OAuth client
# 4. Open the downloaded JSON file and copy the entire content
# 5. Paste it as a single line (minified)
#
# The JSON should look like this (all on one line):
# {"web":{"client_id":"...","project_id":"...","auth_uri":"...","token_uri":"...","client_secret":"...","redirect_uris":[...]}}

GOOGLE_OAUTH_CREDENTIALS_WEDDING={}
GOOGLE_OAUTH_CREDENTIALS_BIRTHDAY={}

# *** AUTHORIZATION URLS - KEY REQUIRED ***
# To authorize each key, visit (key parameter is REQUIRED):
# - Wedding: https://your-vercel-app.vercel.app/authorize?key=wedding
# - Birthday: https://your-vercel-app.vercel.app/authorize?key=birthday
#
# NOTE: Visiting /authorize without ?key= will show an error

# Optional: Override redirect URI (if not specified in the JSON above)
# OAUTH_REDIRECT_URI=https://your-app-name.vercel.app/oauth2callback

# ======================================================================
# Flask Session Configuration
# ======================================================================

# Secret key for Flask session encryption
# Generate a random string for production using:
# python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-random-secret-key-here
